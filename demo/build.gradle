plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android' version '1.9.0'
}

android {
    buildFeatures {
        buildConfig = true  // 显式启用 BuildConfig 生成
    }
    namespace 'com.zolon.maxstore.emm.demo'
    compileSdk 34

    defaultConfig {
        applicationId APPLICATION_ID
        minSdk 29
        targetSdk 34
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME

        compileSdkVersion Integer.parseInt(ANDROID_COMPILE_SDK_VERSION)
        buildToolsVersion ANDROID_BUILD_TOOLS_VERSION

        manifestPlaceholders = [
                ACCESS_KEY: "$ACCESS_KEY", // 替换为实际密钥
                SECRET: "$SECRET"
        ]

    }

    // 1. 定义签名配置
    signingConfigs {
        release {
            // 这些值将从 gradle.properties 中读取
            storeFile file(project.properties['KEYSTORE_FILE'] ?: "debug.keystore")
            storePassword project.properties['KEYSTORE_PASSWORD'] ?: ""
            keyAlias project.properties['KEY_ALIAS'] ?: ""
            keyPassword project.properties['KEY_PASSWORD'] ?: ""
        }
    }


    buildTypes {
        debug {
            buildConfigField "String", "SECRET", "\"$SECRET\""
            resValue "string", "ACCESS_KEY", "$ACCESS_KEY"
            resValue "string", "APP_NAME", "$APP_NAME"
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 2. 应用签名配置
            signingConfig signingConfigs.release
            buildConfigField "String", "SECRET", "\"$SECRET\""
            resValue "string", "ACCESS_KEY", "$ACCESS_KEY"
            resValue "string", "APP_NAME", "$APP_NAME"
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

//variant.outputs.all {
//    if (outputFileName.endsWith('.apk') && 'release'.equals(variant.buildType.name)) {
//        variant.getPackageApplicationProvider().get().outputDirectory = new File(buildDir, "outputs/apk")
//        outputFileName = "${APP_NAME}-${buildType.name}-v${defaultConfig.versionName}.apk"
//    }
//}


dependencies {
    implementation project(':sdk')

//    implementation 'com.whatspos.sdk:emm-android-sdk:1.0.2'

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.0"
}